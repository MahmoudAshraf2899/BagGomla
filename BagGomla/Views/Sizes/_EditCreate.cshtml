@model IdentityLibrary.DataModel.FWYSize
@using BagGomla.LocalResource
@{
    ViewBag.Title = Resource.EditCreate + Resource.Size;
}



<div class="card">
    <div class="card-body">

        <h2>@Resource.EditCreate @Resource.Size</h2>
        <hr />
        @using (Html.BeginForm("EditCreate", "Sizes", FormMethod.Post, new { }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(c => c.SupplierID);
            @Html.HiddenFor(c => c.ID);

            <div class="form-horizontal">
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    <div class="col-md-6">
                        <label for="Name"
                               class="font-weight-bold text-capitalize">
                            @Resource.Name:
                        </label>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        <span class="dis-none field-validation-error text-danger" data-valmsg-for="Name" data-valmsg-replace="true" id="sizeName">@Resource.Name @Resource.IsRequired</span>
                    </div>
                    <div class="col-md-6">
                        <label for="ARName"
                               class="font-weight-bold text-capitalize">
                            @Resource.ArName:
                        </label>
                        @Html.EditorFor(model => model.ARName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ARName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <label for="Width"
                               class="font-weight-bold text-capitalize">
                            @Resource.Width:
                        </label>
                        @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control", type="number" } })
                        @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <label for="Height"
                               class="font-weight-bold text-capitalize">
                            @Resource.Height:
                        </label>
                        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                    </div>
                </div>
                            
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="@Resource.Save" class="btn btn-success" id="btnSubmit"/>
                    </div>
                </div>
            </div>
        }
     </div>
</div>

<script>
    $("#btnSubmit").click(function () {
        var name = $("#Name").val();
        if (name != "" && name != null) {
            document.getElementById("btnSubmit").setAttribute("type", "submit");
        }
        else {
            $("#sizeName").removeClass("dis-none");
            //alert("error");
        }
    });
</script>