@model BagGomla.Models.RegisterViewModel
@using BagGomla.LocalResource
@{
    ViewBag.Title = Resource.Register;
    Layout = "~/Views/Shared/_DefualtLayout.cshtml";
}
<head>
    <style>
        .register {
            background: -webkit-linear-gradient(left, #3931af, #00c6ff);
            /*margin-top: 3%;*/
            padding: 3%;
        }

        .register-left {
            text-align: center;
            color: #fff;
            margin-top: 4%;
        }

            .register-left input {
                border: none;
                border-radius: 1.5rem;
                padding: 2%;
                width: 60%;
                background: #f8f9fa;
                font-weight: bold;
                color: #383d41;
                margin-top: 30%;
                margin-bottom: 3%;
                cursor: pointer;
            }

        .register-right {
            background: #f8f9fa;
            border-top-left-radius: 10% 50%;
            border-bottom-left-radius: 10% 50%;
        }

        .register-left img {
            margin-top: 15%;
            margin-bottom: 5%;
            width: 25%;
            -webkit-animation: mover 2s infinite alternate;
            animation: mover 1s infinite alternate;
        }


        .register-left p {
            font-weight: lighter;
            padding: 12%;
            margin-top: -9%;
        }

        .register .register-form {
            padding: 5%;
            margin-top: 15%;
        }

        .btnRegister {
            float: right;
            margin-top: 10%;
            border: none;
            border-radius: 1.5rem;
            padding: 2%;
            background: #0062cc;
            color: #fff;
            font-weight: 600;
            width: 50%;
            cursor: pointer;
        }

        .register .nav-tabs {
            margin-top: 3%;
            border: none;
            background: #0062cc;
            border-radius: 1.5rem;
            width: 28%;
            float: right;
        }

            .register .nav-tabs .nav-link {
                padding: 2%;
                height: 34px;
                font-weight: 600;
                color: #fff;
                border-top-right-radius: 1.5rem;
                border-bottom-right-radius: 1.5rem;
            }

                .register .nav-tabs .nav-link:hover {
                    border: none;
                }

                .register .nav-tabs .nav-link.active {
                    width: 100px;
                    color: #0062cc;
                    border: 2px solid #0062cc;
                    border-top-left-radius: 1.5rem;
                    border-bottom-left-radius: 1.5rem;
                }

        .register-heading {
            text-align: center;
            margin-top: 8%;
            margin-bottom: -15%;
            color: #495057;
        }
        footer, header, .simple-marquee-container {
        display: none !important;
    }
    </style>
</head>


@using (Html.BeginForm("Register", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", id = "RegisterForm" }))
{
    <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />
    @Html.ValidationSummary("", new { @class = "text-danger" });
    <div class="container register">
        <div class="row">
            <div class="col-md-3 register-left">
                <img src="https://image.ibb.co/n7oTvU/logo_white.png" alt="" />
                <h3>@Resource.Welcome</h3>
                <p>@Resource.DecAbout</p>
            </div>
            <div class="col-md-9 register-right">
                <ul class="nav nav-tabs nav-justified" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">@Resource.Register</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Account/Login">@Resource.Login</a>
                    </li>
                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                        <h3 class="register-heading"> @Resource.Create @Resource.ANew @Resource.Account</h3>
                        <div class="row register-form">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = Resource.Name + "*" })
                                    <span class="dis-none field-validation-error text-danger" data-valmsg-for="FullName" data-valmsg-replace="true" id="msgFullName"></span>
                                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", type = "password", @placeholder = Resource.Password + "*" })
                                        <span class="input-group-append bg-white">
                                            <button class="btn border border-left-0" type="button"><span toggle="#password-field" class="fa fa-fw fa-eye toggle-password"></span></button>
                                        </span>
                                    </div>
                                    <span class="dis-none field-validation-error text-danger" data-valmsg-for="Password" data-valmsg-replace="true" id="msgPassword"></span>
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", type = "password", @placeholder = Resource.Confirm + Resource.Password + "*" })
                                    <span class="dis-none field-validation-error text-danger" data-valmsg-for="ConfirmPassword" data-valmsg-replace="true" id="msgConfirmPassword"></span>
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = Resource.Email + "*" })
                                    <span class="dis-none field-validation-error text-danger" data-valmsg-for="Email" data-valmsg-replace="true" id="msgEmail"></span>
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", type = "number", @placeholder = Resource.Phone + "*" })
                                    <span class="dis-none field-validation-error text-danger" data-valmsg-for="Phone" data-valmsg-replace="true" id="msgPhone"></span>
                                    @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBoxFor(m => m.Latitude, new { @class = "form-control", @id = "txtLatitude", style = "display: none;" })
                                    @Html.TextBoxFor(m => m.Longitude, new { @class = "form-control", @id = "txtLongitude", style = "display: none;" })
                                    <div class="input-group">
                                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @id = "txtAddress", @placeholder = Resource.Location + "*" })
                                        <span class="input-group-append bg-white">
                                            <button class="btn btn-success border border-left-0" type="button" id="AddLocat">@Resource.MyCurrentLocation</button>
                                        </span>
                                    </div>
                                    <span class="dis-none field-validation-error text-danger" data-valmsg-for="txtAddress" data-valmsg-replace="true" id="msgAddress"></span>
                                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                                </div>

                                <input type="button" class="btnRegister" value="@Resource.Register" id="btnSubmit" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

<script src="~/Scripts/js/jquery-1-11-0-min.js"></script>
@*<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>*@

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyAPFGkzEre1YIwcyejsVgRrl8T1DWJZouU"></script>
<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var places = new google.maps.places.Autocomplete(document.getElementById('txtAddress'));
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            document.getElementById('txtAddress').value = place.formatted_address;
            document.getElementById('txtLatitude').value = place.geometry.location.lat();
            document.getElementById('txtLongitude').value = place.geometry.location.lng();
        });
    });
</script>

<script>
    $("#CompanyModel_ProfilePictureName").click(function () {
        $('.js-modal1').addClass('show-modal1');
    });
     $("#AddLocat").click(function (){
            if (navigator.geolocation) {
               navigator.geolocation.watchPosition(showPosition2);
            }
    });
    function showPosition2(position) {
        var lat = position.coords.latitude;
        var long = position.coords.longitude;
        document.getElementById("txtLongitude").value = long;
        document.getElementById("txtLatitude").value = lat;
        GetAddress2(lat, long);
       
    }

    function GetAddress2(lat, lng) {
        var latlng = new google.maps.LatLng(lat, lng);
        var geocoder = geocoder = new google.maps.Geocoder();
        geocoder.geocode({ 'latLng': latlng }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                if (results[1]) {
                    document.getElementById("txtAddress").value = results[1].formatted_address;
                }
            }
        });
    }
    function SelectProfilePic(pic, picName) {
        var myPicID = Number(pic);
        $("#CompanyModel_ProfilePictureID").val(myPicID);
        $("#CompanyModel_ProfilePictureName").val(picName);
        $('.js-modal1').removeClass('show-modal1');
    }
</script>

<script>
    $("#btnSubmit").click(function () {
        var FullName = $("#FullName").val(),
            Phone = $("#Phone").val(),
            Email = $("#Email").val(),
            Password = $("#Password").val(),
            ConfirmPassword = $("#ConfirmPassword").val(),
            Address = $("#txtAddress").val(),
            validEmail = ValidateEmail(Email),
            ValidPass = ValidatePassword(Password, ConfirmPassword);
        $.when(IsUniqueEmail(Email)).done(function (emailResult, e2, e3, e4) {
            $.when(IsUniquePhone(Phone)).done(function (phoneResult, p2, p3, p4) {
                if (FullName != "" && FullName != null && Phone != "" && Phone != null
                     && Phone.length == 11 && (emailResult == 1 || emailResult == 0) && ValidPass == 2
                     && phoneResult == 1) {

                    swal("تم التسجيل بنجاح", "في انتظار الموافقة خلال 12 ساعة", "success").then(function () {
                        document.getElementById("RegisterForm").submit();
                    });
                    //document.getElementById("btnSubmit").setAttribute("type", "submit");
                }
                else {
                    if (FullName == "" || FullName == null) {
                        $("#msgFullName").removeClass("dis-none");
                        $("#msgFullName").html("@Resource.EnName @Resource.IsRequired");
                    }
                    else {
                        $("#msgFullName").html("");
                    }
                    //
                    if (Phone == "" || Phone == null) {
                        $("#msgPhone").removeClass("dis-none");
                        $("#msgPhone").html("@Resource.Phone @Resource.IsRequired");
                    }
                    else {
                        if (Phone.length < 11 || Phone.length > 11) {
                            $("#msgPhone").removeClass("dis-none");
                            $("#msgPhone").html("@Resource.Phone @Resource.MustBeLength");
                        }
                        else if (phoneResult == -2) {
                            $("#msgPhone").removeClass("dis-none");
                            $("#msgPhone").html("@Resource.Phone @Resource.Existing");
                        }
                        else {
                            $("#msgPhone").html("");
                        }
                    }
                    //
                    if (validEmail == -1) {
                        $("#msgEmail").removeClass("dis-none");
                        $("#msgEmail").html("@Resource.Email @Resource.IsNotValid");
                    }
                    else if (emailResult == -2) {
                        $("#msgEmail").removeClass("dis-none");
                        $("#msgEmail").html("@Resource.Email @Resource.Existing");
                        //alert("@Resource.Email @Resource.Existing");
                    }
                    else {
                        $("#msgEmail").html("");
                    }
                    //
                    if (ValidPass == -1) {
                        $("#msgPassword").removeClass("dis-none");
                        $("#msgPassword").html("@Resource.Password @Resource.IsRequired");
                    }
                    else if (ValidPass == 0) {
                        $("#msgPassword").removeClass("dis-none");
                        $("#msgPassword").html("@Resource.PassIsNotValid");
                    }
                    else if (ValidPass == 1) {
                        $("#msgConfirmPassword").removeClass("dis-none");
                        $("#msgConfirmPassword").html("@Resource.PassNotMatching");
                        $("#msgPassword").html("");
                    }
                    else {
                        $("#msgPassword").html("");
                        $("#msgConfirmPassword").html("");
                    }

                }

            });
        });

    });



    function ValidateEmail(email) {
        //alert(email);
        if (email != "" && email != null) {
            const re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            var x = re.test(String(email).toLowerCase());
            if (x == false) {
                return -1;
            }
            else {
                return 1;
            }
        }
        else {
            return 0;
        }

    }


    function IsUniqueEmail(email) {
        return $.ajax({
            type: "GET",
            url: "/Account/IsUniqueEmail?Email=" + email,
            cache: false,
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (result) {
        });
    }

    function IsUniquePhone(phone) {
        return $.ajax({
            type: "GET",
            url: "/Account/IsUniquePhone?Phone=" + phone,
            cache: false,
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (result) {
        });
    }

    function ValidatePassword(password, confirmPassword) {
        var validpass = false;

        if (password.length >= 8) {
            validpass = true;
        }


        if (password == null || password == "") {
            //pass required
            return -1;
        }
        else {
            if (validpass == false) {
                //not valid
                return 0;
            }
            else {
                if (password != confirmPassword) {
                    //not match
                    return 1;
                }
                else {
                    //done
                    return 2;
                }
            }
        }
    }



    $('.toggle-password').click(function () {
        $(this).toggleClass("fa-eye fa-eye-slash");
        var input = $("#Password");
        if (input.attr("type") === "password") {
            input.attr("type", "text");
        } else {
            input.attr("type", "password");
        }
    });

</script>