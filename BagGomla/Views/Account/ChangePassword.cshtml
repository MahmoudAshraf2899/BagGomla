@model BagGomla.Models.ResetPasswordViewModel
@using BagGomla.LocalResource
@using Microsoft.AspNet.Identity;
@using System.Web.UI.WebControls
@using IdentityLibrary.DataModel;
@{
    ViewBag.Title = Resource.Change + " " + Resource.Password;
    DatabaseContext db = new DatabaseContext();
    if (User.Identity.IsAuthenticated)
    {
        var userId = User.Identity.GetUserId();
        var user = db.AspNetUsers.SingleOrDefault(c => c.Id == userId);
        if (User.IsInRole("1"))
        {
            Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
        }
        else
        {
            Layout = "~/Views/Shared/_Layout.cshtml";
        }
    }
}
<br />
<div class="container">
    <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mx-auto ">
                            @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "ResetForm" }))
                            {
                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.Email)
                                <input hidden value="@ViewBag.returnUrl" name="returnUrl" />
                                @Html.AntiForgeryToken()
                                <input hidden value="@ViewBag.TestOldPassword" id="TestOldPassword" />
                                <h3 class="mb-5 form-title pl-3 font-weight-bold"><i class="fa fa-cog" aria-hidden="true"></i> @Resource.Reset @Resource.Password</h3>
                                <div class="form-group">
                                    <div class="form-group">
                                        <label for="Password" class="col-md-3 control-label">@Resource.OldPassword</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.OldPassword, new { @class = "form-control", type = "password" })
                                            <span class="dis-none field-validation-error text-danger" data-valmsg-for="Password" data-valmsg-replace="true" id="msgOldPassword"></span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="Password" class="col-md-4 control-label">@Resource.Password</label>
                                        <div class="col-md-10">
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password" })
                                            <span class="dis-none field-validation-error text-danger" data-valmsg-for="Password" data-valmsg-replace="true" id="msgPassword"></span>
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="ConfirmPassword" class="col-md-4 control-label">@Resource.Confirm @Resource.Password</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", type = "password" })
                                            <span class="dis-none field-validation-error text-danger" data-valmsg-for="ConfirmPassword" data-valmsg-replace="true" id="msgConfirmPassword"></span>
                                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <input id="btnSubmit" type="button" class="btn btn-warning font-weight-bold px-4 d-block mb-4" value="@Resource.Reset" />
                            }
                    </div>
                </div>
            </div>
    </div>
</div>

<script src="~/Scripts/js/jquery-1-11-0-min.js"></script>
<script>
    $("#btnSubmit").click(function () {
        OldPass = $("#OldPassword").val(),
        TestOldPassword = $("#TestOldPassword").val(),
        Password = $("#Password").val(),
        ConfirmPassword = $("#ConfirmPassword").val(),
        ValidPass = ValidatePassword(Password, ConfirmPassword);
        $.when(ValidatePasswordHash(OldPass, TestOldPassword)).done(function (validPassword, e2, e3, e4) {
            if (validPassword == true) {
                if (ValidPass == 2) {
                    document.getElementById("ResetForm").submit();
                }
                if (ValidPass == -1) {
                    $("#msgPassword").removeClass("dis-none");
                    $("#msgPassword").html("@Resource.Password @Resource.IsRequired");
                }
                else if (ValidPass == 0) {
                    $("#msgPassword").removeClass("dis-none");
                    $("#msgPassword").html("@Resource.PassIsNotValid");
                }
                else if (ValidPass == 1) {
                    $("#msgConfirmPassword").removeClass("dis-none");
                    $("#msgConfirmPassword").html("@Resource.PassNotMatching");
                    $("#msgPassword").html("");
                }
                else {
                    $("#msgPassword").html("");
                    $("#msgConfirmPassword").html("");
                }
            }
            else {
                $("#msgOldPassword").removeClass("dis-none");
                $("#msgOldPassword").html("@Resource.PassNotMatching");
            }
        });
        
    });

    
    function ValidatePasswordHash(password, confirmPasswordHash) {
        return $.ajax({
            type: "GET",
            url: "/Account/CheckPass?password=" + password + "&&confirmPasswordHash=" + confirmPasswordHash,
            cache: false,
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (result) {
        });
    }
    function ValidatePassword(password, confirmPassword) {
        var validpass = false;
        if (password.length >= 8) {
            validpass = true;
        }
        if (password == null || password == "") {
            //pass required
            return -1;
        }
        else {
            if (validpass == false) {
                //not valid
                return 0;
            }
            else {
                if (password != confirmPassword) {
                    //not match
                    return 1;
                }
                else {
                    //done
                    return 2;
                }
            }
        }
    }

</script>

